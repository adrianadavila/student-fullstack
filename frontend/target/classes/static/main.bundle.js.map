{"version":3,"sources":["/Users/AdrianaDavila/Desktop/FALL17/felix-class/student-fullstack-app/frontend/src/main/frontend/src/$_gendir lazy","/Users/AdrianaDavila/Desktop/FALL17/felix-class/student-fullstack-app/frontend/src/main/frontend/src/app/app-routing.module.ts","/Users/AdrianaDavila/Desktop/FALL17/felix-class/student-fullstack-app/frontend/src/main/frontend/src/app/app.component.html","/Users/AdrianaDavila/Desktop/FALL17/felix-class/student-fullstack-app/frontend/src/main/frontend/src/app/app.component.ts","/Users/AdrianaDavila/Desktop/FALL17/felix-class/student-fullstack-app/frontend/src/main/frontend/src/app/app.module.ts","/Users/AdrianaDavila/Desktop/FALL17/felix-class/student-fullstack-app/frontend/src/main/frontend/src/app/login/login.component.ts","/Users/AdrianaDavila/Desktop/FALL17/felix-class/student-fullstack-app/frontend/src/main/frontend/src/app/logout/logout.component.ts","/Users/AdrianaDavila/Desktop/FALL17/felix-class/student-fullstack-app/frontend/src/main/frontend/src/app/student/component/student.component.css","/Users/AdrianaDavila/Desktop/FALL17/felix-class/student-fullstack-app/frontend/src/main/frontend/src/app/student/component/student.component.html","/Users/AdrianaDavila/Desktop/FALL17/felix-class/student-fullstack-app/frontend/src/main/frontend/src/app/student/component/student.component.ts","/Users/AdrianaDavila/Desktop/FALL17/felix-class/student-fullstack-app/frontend/src/main/frontend/src/app/student/model/student.ts","/Users/AdrianaDavila/Desktop/FALL17/felix-class/student-fullstack-app/frontend/src/main/frontend/src/app/student/services/student.service.ts","/Users/AdrianaDavila/Desktop/FALL17/felix-class/student-fullstack-app/frontend/src/main/frontend/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/AdrianaDavila/Desktop/FALL17/felix-class/student-fullstack-app/frontend/src/main/frontend/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { StudentComponent } from \"./student/component/student.component\";\nimport {LoginComponent} from \"./login/login.component\"; //add this component\n\n// Route config let's you map routes to components\nconst routes: Routes = [\n  // map '/persons' to the people list component\n  {\n    path: 'students',\n    component: StudentComponent,\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n  // map '/' to '/persons' as our default route\n  {\n    path: '',\n    redirectTo: '/login',\n    pathMatch: 'full' //what?\n\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/AdrianaDavila/Desktop/FALL17/felix-class/student-fullstack-app/frontend/src/main/frontend/src/app/app-routing.module.ts","module.exports = \"<h1>\\n  {{title}}\\n</h1>\\n<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/AdrianaDavila/Desktop/FALL17/felix-class/student-fullstack-app/frontend/src/main/frontend/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","\nimport { Component } from '@angular/core';\n\n@Component({\n   selector: 'my-app',\n   templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = \"Student Mangaement Center\"\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/AdrianaDavila/Desktop/FALL17/felix-class/student-fullstack-app/frontend/src/main/frontend/src/app/app.component.ts","\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent }  from './app.component';\n\nimport { StudentComponent }  from './student/component/student.component';\nimport { StudentService } from './student/services/student.service';\n\n//new new login\nimport{LoginComponent} from './login/login.component';\nimport{LogoutComponent} from './logout/logout.component'\n\n//recently added routing module\nimport { AppRoutingModule } from \"./app-routing.module\";\n\n@NgModule({\n  imports: [\n        BrowserModule,\n\t\tHttpModule,\n    ReactiveFormsModule,\n    FormsModule, //newwwwww\n    AppRoutingModule //new routing added\n  ],\n  declarations: [\n        AppComponent,\n    StudentComponent,\n    LoginComponent,\n    LogoutComponent\n  ],\n  providers: [\n        StudentService\n  ],\n  bootstrap: [\n        AppComponent\n  ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/AdrianaDavila/Desktop/FALL17/felix-class/student-fullstack-app/frontend/src/main/frontend/src/app/app.module.ts","import { Component} from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\n\n@Component({\n  selector: 'app-login',\n  template: `\n  <section >\n    <h2>Hi! In order to see the full list of students, please login</h2>\n  </section>\n\n  <button (click)=\"login()\">Login</button>\n  `,\n  styles: []\n})\nexport class LoginComponent {\n  constructor(private route: ActivatedRoute,\n              private router: Router) { }\n\n\n  login(){\n    let link = ['/students'];\n    this.router.navigate(link);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/AdrianaDavila/Desktop/FALL17/felix-class/student-fullstack-app/frontend/src/main/frontend/src/app/login/login.component.ts","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\n@Component({\n  selector: 'logout-app',\n  template: `\n  <button (click)=\"logout()\">Logout</button>\n  `\n})\nexport class LogoutComponent {\n  constructor(private route: ActivatedRoute,\n    private router: Router) { }\n\n\n    logout(){\n    let link = ['/login'];\n    this.router.navigate(link);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/AdrianaDavila/Desktop/FALL17/felix-class/student-fullstack-app/frontend/src/main/frontend/src/app/logout/logout.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"h1 {\\n  font-size: 2.0em;\\n  margin: 20px 0 0 0;\\n  font-weight: 400;\\n}\\nh3 {\\ncolor: #4545A0;\\n}\\ntable {\\n  border-collapse: collapse;\\n}\\ntable, th, td {\\n  border: 1px solid black;\\nfont-size:17px;\\n}\\ninput {\\n  width: 225px;\\n  margin: 8px 0;\\nbackground-color: #dfdfdf;\\nfont-size:17px;\\n}\\nbutton {\\n  background-color: #008CBA;\\ncolor: white;\\n}\\n.error{\\n  color: red;\\n  font-size: 20px;\\n}\\n.success{\\n  color: green;\\n  font-size: 20px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/AdrianaDavila/Desktop/FALL17/felix-class/student-fullstack-app/frontend/src/main/frontend/src/app/student/component/student.component.css\n// module id = ../../../../../src/app/student/component/student.component.css\n// module chunks = main","module.exports = \"<!-- <h1>Student Management Center</h1> -->\\n<div>\\n  <logout-app></logout-app>\\n</div>\\n<h3 *ngIf=\\\"studentIdToUpdate; else create\\\">\\n   Update Student for Id: {{studentIdToUpdate}}\\n</h3>\\n<ng-template #create>\\n   <h3> Create New Student </h3>\\n</ng-template>\\n<div>\\n <form [formGroup]=\\\"studentForm\\\" (ngSubmit)=\\\"onStudentFormSubmit()\\\">\\n  <table>\\n    <tr><td>Enter Name</td><td><input formControlName=\\\"name\\\">\\n\\t       <label *ngIf=\\\"studentForm.get('name').invalid && processValidation\\\" [ngClass] = \\\"'error'\\\"> Name is required. </label>\\n   \\t</td></tr>\\n    <tr><td>Enter Major</td><td><input formControlName=\\\"major\\\">\\n\\t       <label *ngIf=\\\"studentForm.get('major').invalid && processValidation\\\" [ngClass] = \\\"'error'\\\"> Major is required. </label>\\n\\t</td></tr>\\n    <tr><td colspan=\\\"2\\\">\\n\\t    <button *ngIf=\\\"!studentIdToUpdate\\\">CREATE</button>\\n\\t\\t<button *ngIf=\\\"studentIdToUpdate\\\">UPDATE</button>\\n\\t    <button (click)=\\\"backToCreateStudent()\\\" *ngIf=\\\"studentIdToUpdate\\\">Go Back</button>\\n\\t</td></tr>\\n  </table>\\n </form>\\n <br/>\\n <div *ngIf=\\\"statusCode; else processing\\\">\\n   <div *ngIf=\\\"statusCode === 201\\\" [ngClass] = \\\"'success'\\\">\\n\\t    Student added successfully.\\n   </div>\\n   <div *ngIf=\\\"statusCode === 409\\\" [ngClass] = \\\"'success'\\\">\\n        Student already exists.\\n   </div>\\n   <div *ngIf=\\\"statusCode === 200\\\" [ngClass] = \\\"'success'\\\">\\n        Student updated successfully.\\n   </div>\\n   <div *ngIf=\\\"statusCode === 204\\\" [ngClass] = \\\"'success'\\\">\\n        Student deleted successfully.\\n   </div>\\n   <div *ngIf=\\\"statusCode === 500\\\" [ngClass] = \\\"'error'\\\">\\n        Internal Server Error.\\n   </div>\\n </div>\\n <ng-template #processing>\\n\\t<img *ngIf=\\\"requestProcessing\\\" src=\\\"assets/images/loading.gif\\\">\\n </ng-template>\\n</div>\\n<h3>Student Details</h3>\\n<table>\\n  <tr><th> Id</th> <th>Name</th><th>Major</th><th></th><th></th></tr>\\n  <tr *ngFor=\\\"let student of allStudents\\\" >\\n    <td>{{student.id}}</td> <td>{{student.name}}</td> <td>{{student.major}}</td>\\n\\t<td><button type=\\\"button\\\" (click)=\\\"loadStudentToEdit(student.id)\\\">Edit</button> </td>\\n\\t<td><button type=\\\"button\\\" (click)=\\\"deleteStudent(student.id)\\\">Delete</button></td>\\n  </tr>\\n</table>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/AdrianaDavila/Desktop/FALL17/felix-class/student-fullstack-app/frontend/src/main/frontend/src/app/student/component/student.component.html\n// module id = ../../../../../src/app/student/component/student.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { StudentService } from '../services/student.service';\nimport { Student } from '../model/student';\n\n@Component({\n   selector: 'app-student',\n   templateUrl: './student.component.html',\n   styleUrls: ['./student.component.css']\n})\nexport class StudentComponent implements OnInit {\n   //Component properties\n   allStudents: Student[];\n   statusCode: number;\n   requestProcessing = false;\n   studentIdToUpdate = null;\n   processValidation = false;\n   //Create form\n   studentForm = new FormGroup({\n       name: new FormControl('', Validators.required),\n       major: new FormControl('', Validators.required)\n   });\n   //Create constructor to get service instance\n   constructor(private studentService: StudentService) {\n   }\n   //Create ngOnInit() and and load students\n   ngOnInit(): void {\n\t   this.getAllStudents();\n   }\n   //Fetch all students\n   getAllStudents() {\n        this.studentService.getAllStudents()\n\t\t  .subscribe(\n                data => this.allStudents = data,\n                errorCode =>  this.statusCode = errorCode);\n   }\n   //Handle create and update student\n   onStudentFormSubmit() {\n\t  this.processValidation = true;\n\t  if (this.studentForm.invalid) {\n\t       return; //Validation failed, exit from method.\n\t  }\n\t  //Form is valid, now perform create or update\n      this.preProcessConfigurations();\n\t  let name = this.studentForm.get('name').value.trim();\n      let major = this.studentForm.get('major').value.trim();\n\t  if (this.studentIdToUpdate === null) {\n      //Handle create student\n      console.log('it WAS NULL');\n\t    let student= new Student(null, name, major);\n\t    this.studentService.createStudent(student)\n\t      .subscribe(successCode => {\n\t\t            this.statusCode = successCode;\n\t\t\t\t    this.getAllStudents();\n\t\t\t\t\tthis.backToCreateStudent();\n\t\t\t    },\n\t\t        errorCode => this.statusCode = errorCode);\n\t  } else {\n         //Handle update student\n      let student= new Student(this.studentIdToUpdate, name, major);\n\n\t    this.studentService.updateStudent(student)\n\t      .subscribe(successCode => {\n\t\t            this.statusCode = successCode;\n\t\t\t\t    this.getAllStudents();\n\t\t\t\t\tthis.backToCreateStudent();\n\t\t\t    },\n\t\t        errorCode => this.statusCode = errorCode);\n\t  }\n   }\n   //Load article by id to edit\n   loadStudentToEdit(studentId: number) {\n      this.preProcessConfigurations();\n      this.studentService.getStudentById(studentId)\n\t      .subscribe(res => {\n            this.studentIdToUpdate = res.id;\n            this.studentForm.setValue({ name: res.name, major: res.major });\n            this.processValidation = true;\n            this.requestProcessing = false;\n\n\t\t    },\n\t\t     errorCode =>  this.statusCode = errorCode);\n   }\n   //Delete article\n   deleteStudent(studentId: number) {\n      this.preProcessConfigurations();\n      this.studentService.deleteStudentById(studentId)\n\t      .subscribe(successCode => {\n\t\t            this.statusCode = successCode;\n\t\t\t\t    this.getAllStudents();\n\t\t\t\t    this.backToCreateStudent();\n\t\t\t    },\n\t\t        errorCode => this.statusCode = errorCode);\n   }\n   //Perform preliminary processing configurations\n   preProcessConfigurations() {\n      this.statusCode = null;\n\t  this.requestProcessing = true;\n   }\n   //Go back from update to create\n   backToCreateStudent() {\n      this.studentIdToUpdate = null;\n      this.studentForm.reset();\n\t  this.processValidation = false;\n   }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/AdrianaDavila/Desktop/FALL17/felix-class/student-fullstack-app/frontend/src/main/frontend/src/app/student/component/student.component.ts","export class Student {\n  constructor(public id: number, public name: string, public major: string) {\n  }\n}\n//studentId ==> id\n\n\n\n// WEBPACK FOOTER //\n// /Users/AdrianaDavila/Desktop/FALL17/felix-class/student-fullstack-app/frontend/src/main/frontend/src/app/student/model/student.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, URLSearchParams, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs';\n\nimport { Student } from '../model/student';\n\n@Injectable()\nexport class StudentService {\n    //URLs for CRUD operations\n    //GET all students\n    allStudentsUrl = \"http://localhost:8080/rest/all-students\";\n    studentUrl = \"http://localhost:8080/rest/student\";\n\n\n\t//Create constructor to get Http instance\n\tconstructor(private http:Http) {\n\t}\n\t//Fetch all students\n    getAllStudents(): Observable<Student[]> {\n        return this.http.get(this.allStudentsUrl)\n\t\t   \t\t.map(this.extractData)\n\t\t        .catch(this.handleError);\n\n    }\n\t//Create student\n    createStudent(student: Student):Observable<number> {\n\t    let cpHeaders = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ headers: cpHeaders });\n        return this.http.post(this.studentUrl, student, options)\n               .map(success => success.status)\n               .catch(this.handleError);\n    }\n\t//Fetch student by id\n    getStudentById(studentId: number): Observable<Student> {\n      let cpHeaders = new Headers({ 'Content-Type': 'application/json' });\n      let cpParams = new URLSearchParams();\n      cpParams.set('id', studentId.toString());\n      let options = new RequestOptions({ headers: cpHeaders, params: cpParams });\n      return this.http.get(this.studentUrl, options)\n          .map(this.extractData)\n          .catch(this.handleError);\n    }\n\t//Update student\n    updateStudent(student: Student):Observable<number> {\n\t    let cpHeaders = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ headers: cpHeaders });\n        return this.http.put(this.studentUrl, student, options)\n               .map(success => success.status)\n               .catch(this.handleError);\n    }\n    //Delete student\n    deleteStudentById(studentId: number): Observable<number> {\n      let cpHeaders = new Headers({ 'Content-Type': 'application/json' });\n      let cpParams = new URLSearchParams();\n      cpParams.set('id', studentId.toString());\n      let options = new RequestOptions({ headers: cpHeaders, params: cpParams });\n      return this.http.delete(this.studentUrl, options)\n          .map(success => success.status)\n          .catch(this.handleError);\n    }\n\t  private extractData(res: Response) {\n\t    let body = res.json();\n        return body;\n    }\n    private handleError (error: Response | any) {\n      console.error(error.message || error);\n      return Observable.throw(error.status);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/AdrianaDavila/Desktop/FALL17/felix-class/student-fullstack-app/frontend/src/main/frontend/src/app/student/services/student.service.ts","// import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\n// import { AppModule } from './app/app.module';\n\n// platformBrowserDynamic().bootstrapModule(AppModule);\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n// if (environment.production) {\n//   enableProdMode();\n// }\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/AdrianaDavila/Desktop/FALL17/felix-class/student-fullstack-app/frontend/src/main/frontend/src/main.ts"],"sourceRoot":"webpack:///"}